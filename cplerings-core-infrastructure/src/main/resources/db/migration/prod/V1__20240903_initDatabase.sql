CREATE SEQUENCE IF NOT EXISTS ACCOUNT_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS ACCOUNT_VERIFICATION_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS AGREEMENT_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS COLLECTION_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS DESIGN_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS DIAMOND_CATEGORY_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS DIAMOND_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS DISCOUNT_CAMPAIGN_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS GIA_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS METAL_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS RING_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS SPOUSE_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS WARRANTY_SEQ START WITH 1 INCREMENT BY 10;

CREATE TABLE ACCOUNT
(
    ACCOUNT_ID  BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    EMAIL       VARCHAR(100)                NOT NULL,
    PASSWORD    VARCHAR(62)                 NOT NULL,
    ROLE        VARCHAR(12)                 NOT NULL,
    STATUS      VARCHAR(10)                 NOT NULL,
    CONSTRAINT PK_ACCOUNT PRIMARY KEY (ACCOUNT_ID)
);

CREATE TABLE ACCOUNT_VERIFICATION
(
    ACCOUNT_VERIFICATION_ID BIGINT                      NOT NULL,
    CREATED_AT              TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY               VARCHAR(50)                 NOT NULL,
    MODIFIED_AT             TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY             VARCHAR(50),
    VERSION                 INTEGER,
    VERIFICATION_CODE       VARCHAR(6)                  NOT NULL,
    STATUS                  VARCHAR(10)                 NOT NULL,
    ACCOUNT_ID              BIGINT                      NOT NULL,
    CONSTRAINT PK_ACCOUNT_VERIFICATION PRIMARY KEY (ACCOUNT_VERIFICATION_ID)
);

CREATE TABLE AGREEMENT
(
    AGREEMENT_ID   BIGINT                      NOT NULL,
    CREATED_AT     TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY      VARCHAR(50)                 NOT NULL,
    MODIFIED_AT    TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY    VARCHAR(50),
    VERSION        INTEGER,
    MARRIAGE_DATE  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    FIRST_RING_ID  BIGINT                      NOT NULL,
    SECOND_RING_ID BIGINT                      NOT NULL,
    CONSTRAINT PK_AGREEMENT PRIMARY KEY (AGREEMENT_ID)
);

CREATE TABLE COLLECTION
(
    COLLECTION_ID BIGINT                      NOT NULL,
    CREATED_AT    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY     VARCHAR(50)                 NOT NULL,
    MODIFIED_AT   TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY   VARCHAR(50),
    VERSION       INTEGER,
    TITLE         VARCHAR(255)                NOT NULL,
    CONSTRAINT PK_COLLECTION PRIMARY KEY (COLLECTION_ID)
);

CREATE TABLE DESIGN
(
    DESIGN_ID     BIGINT                      NOT NULL,
    CREATED_AT    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY     VARCHAR(50)                 NOT NULL,
    MODIFIED_AT   TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY   VARCHAR(50),
    VERSION       INTEGER,
    COLLECTION_ID BIGINT,
    CONSTRAINT PK_DESIGN PRIMARY KEY (DESIGN_ID)
);

CREATE TABLE DIAMOND
(
    DIAMOND_ID  BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    GIA_ID      BIGINT                      NOT NULL,
    CATEGORY_ID BIGINT                      NOT NULL,
    CONSTRAINT PK_DIAMOND PRIMARY KEY (DIAMOND_ID)
);

CREATE TABLE DIAMOND_CATEGORY
(
    DIAMOND_CATEGORY_ID BIGINT                      NOT NULL,
    CREATED_AT          TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY           VARCHAR(50)                 NOT NULL,
    MODIFIED_AT         TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY         VARCHAR(50),
    VERSION             INTEGER,
    CONSTRAINT PK_DIAMOND_CATEGORY PRIMARY KEY (DIAMOND_CATEGORY_ID)
);

CREATE TABLE DISCOUNT_CAMPAIGN
(
    DISCOUNT_CAMPAIGN_ID BIGINT                      NOT NULL,
    CREATED_AT           TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY            VARCHAR(50)                 NOT NULL,
    MODIFIED_AT          TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY          VARCHAR(50),
    VERSION              INTEGER,
    CONSTRAINT PK_DISCOUNT_CAMPAIGN PRIMARY KEY (DISCOUNT_CAMPAIGN_ID)
);

CREATE TABLE DISCOUNT_CAMPAIGN_COLLECTION
(
    DISCOUNT_CAMPAIGN_COLLECTION_ID BIGINT                      NOT NULL,
    CREATED_AT                      TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY                       VARCHAR(50)                 NOT NULL,
    MODIFIED_AT                     TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY                     VARCHAR(50),
    VERSION                         INTEGER,
    COLLECTION_ID                   BIGINT                      NOT NULL,
    DISCOUNT_CAMPAIGN_ID            BIGINT                      NOT NULL,
    CONSTRAINT PK_DISCOUNT_CAMPAIGN_COLLECTION PRIMARY KEY (DISCOUNT_CAMPAIGN_COLLECTION_ID)
);

CREATE TABLE GIA
(
    GIA_ID           BIGINT                      NOT NULL,
    CREATED_AT       TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY        VARCHAR(50)                 NOT NULL,
    MODIFIED_AT      TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY      VARCHAR(50),
    VERSION          INTEGER,
    GIA_DOCUMENT_URL VARCHAR(255)                NOT NULL,
    CONSTRAINT PK_GIA PRIMARY KEY (GIA_ID)
);

CREATE TABLE METAL
(
    METAL_ID    BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    CONSTRAINT PK_METAL PRIMARY KEY (METAL_ID)
);

CREATE TABLE RING
(
    RING_ID     BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    DESIGN_ID   BIGINT                      NOT NULL,
    DIAMOND_ID  BIGINT                      NOT NULL,
    METAL_ID    BIGINT                      NOT NULL,
    WARRANTY_ID BIGINT                      NOT NULL,
    CONSTRAINT PK_RING PRIMARY KEY (RING_ID)
);

CREATE TABLE SPOUSE
(
    SPOUSE_ID         BIGINT                      NOT NULL,
    CREATED_AT        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY         VARCHAR(50)                 NOT NULL,
    MODIFIED_AT       TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY       VARCHAR(50),
    VERSION           INTEGER,
    FIRST_NAME        VARCHAR(50)                 NOT NULL,
    MIDDLE_NAME       VARCHAR(50),
    LAST_NAME         VARCHAR(50)                 NOT NULL,
    BIRTH_DATE        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ID_CARD_NUMBER    VARCHAR(12)                 NOT NULL,
    ID_CARD_IMAGE_URL VARCHAR(255)                NOT NULL,
    ACCOUNT_ID        BIGINT,
    AGREEMENT_ID      BIGINT,
    CONSTRAINT PK_SPOUSE PRIMARY KEY (SPOUSE_ID)
);

CREATE TABLE WARRANTY
(
    WARRANTY_ID BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    START_TIME  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_TIME    TIMESTAMP WITHOUT TIME ZONE,
    CONSTRAINT PK_WARRANTY PRIMARY KEY (WARRANTY_ID)
);

ALTER TABLE ACCOUNT
    ADD CONSTRAINT UC_ACCOUNT_EMAIL UNIQUE (EMAIL);

ALTER TABLE ACCOUNT
    ADD CONSTRAINT UC_ACCOUNT_PASSWORD UNIQUE (PASSWORD);

ALTER TABLE ACCOUNT_VERIFICATION
    ADD CONSTRAINT UC_ACCOUNT_VERIFICATION_ACCOUNT UNIQUE (ACCOUNT_ID);

ALTER TABLE AGREEMENT
    ADD CONSTRAINT UC_AGREEMENT_FIRST_RING UNIQUE (FIRST_RING_ID);

ALTER TABLE AGREEMENT
    ADD CONSTRAINT UC_AGREEMENT_SECOND_RING UNIQUE (SECOND_RING_ID);

ALTER TABLE DIAMOND
    ADD CONSTRAINT UC_DIAMOND_GIA UNIQUE (GIA_ID);

ALTER TABLE GIA
    ADD CONSTRAINT UC_GIA_GIA_DOCUMENT_URL UNIQUE (GIA_DOCUMENT_URL);

ALTER TABLE RING
    ADD CONSTRAINT UC_RING_DIAMOND UNIQUE (DIAMOND_ID);

ALTER TABLE RING
    ADD CONSTRAINT UC_RING_METAL UNIQUE (METAL_ID);

ALTER TABLE RING
    ADD CONSTRAINT UC_RING_WARRANTY UNIQUE (WARRANTY_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT UC_SPOUSE_ACCOUNT UNIQUE (ACCOUNT_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT UC_SPOUSE_ID_CARD_IMAGE_URL UNIQUE (ID_CARD_IMAGE_URL);

ALTER TABLE SPOUSE
    ADD CONSTRAINT UC_SPOUSE_ID_CARD_NUMBER UNIQUE (ID_CARD_NUMBER);

ALTER TABLE ACCOUNT_VERIFICATION
    ADD CONSTRAINT FK_ACCOUNT_VERIFICATION_ON_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID);

ALTER TABLE AGREEMENT
    ADD CONSTRAINT FK_AGREEMENT_ON_FIRST_RING FOREIGN KEY (FIRST_RING_ID) REFERENCES RING (RING_ID);

ALTER TABLE AGREEMENT
    ADD CONSTRAINT FK_AGREEMENT_ON_SECOND_RING FOREIGN KEY (SECOND_RING_ID) REFERENCES RING (RING_ID);

ALTER TABLE DESIGN
    ADD CONSTRAINT FK_DESIGN_ON_COLLECTION FOREIGN KEY (COLLECTION_ID) REFERENCES COLLECTION (COLLECTION_ID);

ALTER TABLE DIAMOND
    ADD CONSTRAINT FK_DIAMOND_ON_CATEGORY FOREIGN KEY (CATEGORY_ID) REFERENCES DIAMOND_CATEGORY (DIAMOND_CATEGORY_ID);

ALTER TABLE DIAMOND
    ADD CONSTRAINT FK_DIAMOND_ON_GIA FOREIGN KEY (GIA_ID) REFERENCES GIA (GIA_ID);

ALTER TABLE DISCOUNT_CAMPAIGN_COLLECTION
    ADD CONSTRAINT FK_DISCOUNT_CAMPAIGN_COLLECTION_ON_COLLECTION FOREIGN KEY (COLLECTION_ID) REFERENCES COLLECTION (COLLECTION_ID);

ALTER TABLE DISCOUNT_CAMPAIGN_COLLECTION
    ADD CONSTRAINT FK_DISCOUNT_CAMPAIGN_COLLECTION_ON_DISCOUNT_CAMPAIGN FOREIGN KEY (DISCOUNT_CAMPAIGN_ID) REFERENCES DISCOUNT_CAMPAIGN (DISCOUNT_CAMPAIGN_ID);

ALTER TABLE RING
    ADD CONSTRAINT FK_RING_ON_DESIGN FOREIGN KEY (DESIGN_ID) REFERENCES DESIGN (DESIGN_ID);

ALTER TABLE RING
    ADD CONSTRAINT FK_RING_ON_DIAMOND FOREIGN KEY (DIAMOND_ID) REFERENCES DIAMOND (DIAMOND_ID);

ALTER TABLE RING
    ADD CONSTRAINT FK_RING_ON_METAL FOREIGN KEY (METAL_ID) REFERENCES METAL (METAL_ID);

ALTER TABLE RING
    ADD CONSTRAINT FK_RING_ON_WARRANTY FOREIGN KEY (WARRANTY_ID) REFERENCES WARRANTY (WARRANTY_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT FK_SPOUSE_ON_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT FK_SPOUSE_ON_AGREEMENT FOREIGN KEY (AGREEMENT_ID) REFERENCES AGREEMENT (AGREEMENT_ID);