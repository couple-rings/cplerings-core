CREATE SEQUENCE IF NOT EXISTS ACCOUNT_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS ACCOUNT_VERIFICATION_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS AGREEMENT_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS DIAMOND_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS RING_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS RING_WARRANTY_SEQ START WITH 1 INCREMENT BY 10;

CREATE SEQUENCE IF NOT EXISTS SPOUSE_SEQ START WITH 1 INCREMENT BY 10;

CREATE TABLE ACCOUNT
(
    ACCOUNT_ID  BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    EMAIL       VARCHAR(100)                NOT NULL,
    PASSWORD    VARCHAR(62)                 NOT NULL,
    ROLE        VARCHAR(12)                 NOT NULL,
    STATUS      VARCHAR(10)                 NOT NULL,
    CONSTRAINT PK_ACCOUNT PRIMARY KEY (ACCOUNT_ID)
);

CREATE TABLE ACCOUNT_VERIFICATION
(
    ACCOUNT_VERIFICATION_ID BIGINT                      NOT NULL,
    CREATED_AT              TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY               VARCHAR(50)                 NOT NULL,
    MODIFIED_AT             TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY             VARCHAR(50),
    VERSION                 INTEGER,
    VERIFICATION_CODE       VARCHAR(6)                  NOT NULL,
    STATUS                  VARCHAR(10)                 NOT NULL,
    ACCOUNT_ID              BIGINT                      NOT NULL,
    CONSTRAINT PK_ACCOUNT_VERIFICATION PRIMARY KEY (ACCOUNT_VERIFICATION_ID)
);

CREATE TABLE AGREEMENT
(
    AGREEMENT_ID  BIGINT                      NOT NULL,
    CREATED_AT    TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY     VARCHAR(50)                 NOT NULL,
    MODIFIED_AT   TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY   VARCHAR(50),
    VERSION       INTEGER,
    MARRIAGE_DATE TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CONSTRAINT PK_AGREEMENT PRIMARY KEY (AGREEMENT_ID)
);

CREATE TABLE DIAMOND
(
    DIAMOND_ID  BIGINT                      NOT NULL,
    CREATED_AT  TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY   VARCHAR(50)                 NOT NULL,
    MODIFIED_AT TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY VARCHAR(50),
    VERSION     INTEGER,
    CONSTRAINT PK_DIAMOND PRIMARY KEY (DIAMOND_ID)
);

CREATE TABLE RING
(
    RING_ID      BIGINT                      NOT NULL,
    CREATED_AT   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY    VARCHAR(50)                 NOT NULL,
    MODIFIED_AT  TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY  VARCHAR(50),
    VERSION      INTEGER,
    AGREEMENT_ID BIGINT,
    DIAMOND_ID   BIGINT                      NOT NULL,
    CONSTRAINT PK_RING PRIMARY KEY (RING_ID)
);

CREATE TABLE RING_WARRANTY
(
    RING_WARRANTY_ID BIGINT                      NOT NULL,
    CREATED_AT       TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY        VARCHAR(50)                 NOT NULL,
    MODIFIED_AT      TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY      VARCHAR(50),
    VERSION          INTEGER,
    START_TIME       TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    END_TIME         TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    RING_ID          BIGINT                      NOT NULL,
    CONSTRAINT PK_RING_WARRANTY PRIMARY KEY (RING_WARRANTY_ID)
);

CREATE TABLE SPOUSE
(
    SPOUSE_ID         BIGINT                      NOT NULL,
    CREATED_AT        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    CREATE_BY         VARCHAR(50)                 NOT NULL,
    MODIFIED_AT       TIMESTAMP WITHOUT TIME ZONE,
    MODIFIED_BY       VARCHAR(50),
    VERSION           INTEGER,
    FIRST_NAME        VARCHAR(50)                 NOT NULL,
    MIDDLE_NAME       VARCHAR(50),
    LAST_NAME         VARCHAR(50)                 NOT NULL,
    BIRTH_DATE        TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    ID_CARD_NUMBER    VARCHAR(12)                 NOT NULL,
    ID_CARD_IMAGE_URL VARCHAR(255)                NOT NULL,
    ACCOUNT_ID        BIGINT                      NOT NULL,
    AGREEMENT_ID      BIGINT,
    CONSTRAINT PK_SPOUSE PRIMARY KEY (SPOUSE_ID)
);

ALTER TABLE ACCOUNT
    ADD CONSTRAINT UC_ACCOUNT_EMAIL UNIQUE (EMAIL);

ALTER TABLE ACCOUNT
    ADD CONSTRAINT UC_ACCOUNT_PASSWORD UNIQUE (PASSWORD);

ALTER TABLE ACCOUNT_VERIFICATION
    ADD CONSTRAINT UC_ACCOUNT_VERIFICATION_ACCOUNT UNIQUE (ACCOUNT_ID);

ALTER TABLE RING
    ADD CONSTRAINT UC_RING_DIAMOND UNIQUE (DIAMOND_ID);

ALTER TABLE RING_WARRANTY
    ADD CONSTRAINT UC_RING_WARRANTY_RING UNIQUE (RING_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT UC_SPOUSE_ACCOUNT UNIQUE (ACCOUNT_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT UC_SPOUSE_ID_CARD_IMAGE_URL UNIQUE (ID_CARD_IMAGE_URL);

ALTER TABLE SPOUSE
    ADD CONSTRAINT UC_SPOUSE_ID_CARD_NUMBER UNIQUE (ID_CARD_NUMBER);

ALTER TABLE ACCOUNT_VERIFICATION
    ADD CONSTRAINT FK_ACCOUNT_VERIFICATION_ON_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID);

ALTER TABLE RING
    ADD CONSTRAINT FK_RING_ON_AGREEMENT FOREIGN KEY (AGREEMENT_ID) REFERENCES AGREEMENT (AGREEMENT_ID);

ALTER TABLE RING
    ADD CONSTRAINT FK_RING_ON_DIAMOND FOREIGN KEY (DIAMOND_ID) REFERENCES DIAMOND (DIAMOND_ID);

ALTER TABLE RING_WARRANTY
    ADD CONSTRAINT FK_RING_WARRANTY_ON_RING FOREIGN KEY (RING_ID) REFERENCES RING (RING_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT FK_SPOUSE_ON_ACCOUNT FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT (ACCOUNT_ID);

ALTER TABLE SPOUSE
    ADD CONSTRAINT FK_SPOUSE_ON_AGREEMENT FOREIGN KEY (AGREEMENT_ID) REFERENCES AGREEMENT (AGREEMENT_ID);