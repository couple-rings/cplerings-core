name: Deploys DEV-CORE
on:
  pull_request:
    branches:
      - develop
    types: [ closed ]

jobs:
  unit-testing:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Run Unit Tests
        run: mvn clean test

  integration-testing:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codes
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: maven

      - name: Run Integration Tests
        run: mvn clean verify

  build-push-docker:
    needs: [ unit-testing, integration-testing ]
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_NAMESPACE }}/${{ secrets.DEV_DOCKER_HUB_REPOSITORY }}:latest

  deploy-ec2:
    needs: [ build-push-docker ]
    runs-on: ubuntu-latest
    steps:
      - name: Add SSH key
        run: |
          printf "%s" "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ${{ secrets.EC2_USER }}@${{ secrets.DEV_EC2_HOST }} << 'EOF'
            printf "%s" "${{ secrets.DEV_ENV }}" > .env

            sudo docker pull ${{ secrets.DOCKER_HUB_NAMESPACE }}/${{ secrets.DEV_DOCKER_HUB_REPOSITORY }}:latest

            sudo docker stop cplerings-core-dev || true
            sudo docker rm cplerings-core-dev || true

            sudo docker run -d --name cplerings-core-dev -p 8080:8080 --env-file .env ${{ secrets.DOCKER_HUB_NAMESPACE }}/${{ secrets.DEV_DOCKER_HUB_REPOSITORY }}:latest

            rm .env
          EOF

      - name: Clean up SSH key
        run: |
          rm ec2_key.pem